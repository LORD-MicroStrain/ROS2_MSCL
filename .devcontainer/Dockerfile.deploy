ARG DEV_IMAGE
ARG ARCH="amd64"
ARG ROS_VERSION="galactic"
ARG ROS_MSCL_DIR="/usr/share/ros-mscl"
FROM ${DEV_IMAGE} as builder

# We will do everything from now on as root since we will be building and copying to global directories
USER root

# Build the driver and it's messages
ARG ROS_MSCL_DIR
COPY ros2_mscl "${ROS_MSCL_DIR}/src/ros2_mscl"
COPY mscl_msgs "${ROS_MSCL_DIR}/src/mscl_msgs"
RUN set -ex \
    && cd "${ROS_MSCL_DIR}" \
    && /ros_entrypoint.sh colcon build --cmake-args -DCMAKE_BUILD_TYPE=RELEASE

# Build a lighter runtime image from the core ros image which is smaller
FROM ${ARCH}/ros:${ROS_VERSION}-ros-core

# Copy the built binaries from the dev image as well as any dependencies
ARG ROS_MSCL_DIR
ENV ROS_MSCL_DIR "${ROS_MSCL_DIR}"
COPY --from=builder ${ROS_MSCL_DIR}/install ${ROS_MSCL_DIR}/install
COPY --from=builder /usr/share/c++-mscl/libmscl.so /usr/share/c++-mscl/libmscl.so

# Make sure that MSCL is loadable
ENV LD_LIBRARY_PATH "${LD_LIBRARY_PATH}:/usr/share/c++-mscl"

# Default command will be to run ros launch file
CMD ["/bin/bash", "-c", ". ${ROS_MSCL_DIR}/install/setup.bash && ros2 launch ros2_mscl microstrain_launch.py"]
